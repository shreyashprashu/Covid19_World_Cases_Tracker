{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/COVID-19.png"],"names":["module","exports","Cards","data","confirmed","deaths","lastUpdate","recovered","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","initialDailyData","fetchApi","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","setState","this","image","src","alt","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1b60b991.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3aBRV\",\"card\":\"Cards_card__1Nby-\",\"infected\":\"Cards_infected__3NQog\",\"recovered\":\"Cards_recovered__Wr-UX\",\"deaths\":\"Cards_deaths__sOYW3\"};","import React from 'react';\r\nimport {Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nconst Cards =({data: {confirmed,deaths,lastUpdate,recovered}})=>{\r\n    if(!confirmed){\r\n        return 'Loading...'\r\n    }\r\n      return (\r\n           <div className={styles.container}>\r\n               <Grid container spacing={3} justify=\"center\">\r\n                   <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.infected)}>\r\n                      <CardContent>\r\n                          <Typography color=\"textSecondary\" gutterBottom>Infeceted</Typography>\r\n                            <Typography variant='h5'>\r\n                            <CountUp start={0} end={confirmed.value} duration={2.5}separator=','/>\r\n                            </Typography>\r\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                             <Typography variant='body2'>Active cases of COVID-19</Typography>\r\n                          </CardContent> \r\n                   </Grid>\r\n                   <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.recovered)}>\r\n                      <CardContent>\r\n                          <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                          <Typography variant='h5'>\r\n                          <CountUp start={0} end={recovered.value} duration={2.5}separator=','/>\r\n                          </Typography>\r\n                          <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                          <Typography variant='body2'>Recoveries from COVID-19</Typography>\r\n                          </CardContent> \r\n                   </Grid>\r\n                   <Grid item component={Card} xs={12} md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={deaths.value} duration={2.5}separator=','/></Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Deaths from COVID-19</Typography>\r\n                        </CardContent> \r\n                    </Grid>\r\n               </Grid>\r\n           </div>\r\n        )\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url ='https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n  \r\n    if (country) {\r\n      changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n  \r\n    try {\r\n      const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n  \r\n      return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchDailyData = async ()=>{\r\ntry{\r\n    const {data} = await axios.get(`${url}/daily`);\r\n   const modifiedData =data.map((dailyData)=>({\r\n    confirmed:dailyData.confirmed.total,\r\n    deaths:dailyData.deaths.total,\r\n    date:dailyData.reportDate,\r\n   }))\r\n   return modifiedData;\r\n\r\n} catch(error){\r\n\r\n}\r\n\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data: { countries } } = await axios.get(`${url}/countries`);\r\n  \r\n      return countries.map((country) => country.name);\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };","import React,{useState,useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line ,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css'\r\nconst Chart =({ data: { confirmed, recovered, deaths }, country })=>{\r\n      const [dailyData,setDailyData]=useState({});\r\n      useEffect(()=>{\r\n            const fetchApi =async () =>{\r\n                  const initialDailyData = await fetchDailyData();\r\n\r\n                  setDailyData(initialDailyData);            };\r\n            //console.log(dailyData)\r\n            fetchApi();\r\n      },[]);\r\n\r\n\r\n      const barChart = (\r\n            confirmed ? (\r\n              <Bar\r\n                data={{\r\n                  labels: ['Infected', 'Recovered', 'Deaths'],\r\n                  datasets: [\r\n                    {\r\n                      label: 'People',\r\n                      backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                      data: [confirmed.value, recovered.value, deaths.value],\r\n                    },\r\n                  ],\r\n                }}\r\n                options={{\r\n                  legend: { display: false },\r\n                  title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n              />\r\n            ) : null\r\n          );\r\n\r\n      const lineChart = (\r\n           dailyData.length ?\r\n           ( <Line \r\n            data={\r\n                  {\r\n                        labels:dailyData.map(({date}) => date),\r\n                        datasets:[{\r\n                              data: dailyData.map((data)=>data.confirmed),\r\n                              label: 'Confirmed',\r\n                              borderColor:'#3457D5',\r\n                              fill: true,\r\n                        },{\r\n                              data: dailyData.map((data)=>data.deaths),\r\n                              label: 'Deaths',\r\n                              borderColor:'#fd5c63',\r\n                             // backgroundColor:'rgba(255, 0, 0, 0.5)',\r\n                              fill: true,\r\n                        }],\r\n                  }\r\n            }/>) : null\r\n      )\r\n      \r\n      return (\r\n            <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n          </div>\r\n        )\r\n}\r\nexport default Chart;","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;","import React from 'react';\r\n// import Cards from './components/Cards/Cards';\r\n// import Chart from './components/Chart/Chart';\r\n// import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards,Chart,CountryPicker} from './components';\r\nimport {fetchData} from './api';\r\nimport styles from './App.module.css'\r\nimport image from './images/COVID-19.png';\r\n\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        data:{},\r\n        country:''\r\n    }\r\n\r\n   async componentDidMount(){\r\n    const data = await fetchData();\r\n        this.setState({data});\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const data = await fetchData(country);\r\n    \r\n        this.setState({ data, country: country });\r\n      }\r\n    render(){\r\n        const {data,country}=this.state;\r\n        return (\r\n            <div className={styles.container}> \r\n            <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country}/> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3Agd1\",\"image\":\"App_image__3ZnB3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__240o8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2UJWt\"};","module.exports = __webpack_public_path__ + \"static/media/COVID-19.d9dc53e2.png\";"],"sourceRoot":""}